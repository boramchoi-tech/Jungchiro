<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="board_favDto">

	<!-- 즐겨찾기 게시판 등록 여부 확인 -->
	<select id="checkBoardFav" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM BOARD_FAV 
		WHERE BOARD_SEQ = #{board_seq} AND MEMBER_SEQ = #{member_seq} AND BOARD_FAV_CHECK = 'Y'
	</select>
	
	<!-- 즐겨찾기 게시판 부분 출력 -->
	<select id="boardFavPartialList" parameterType="map" resultType="board_favDto">
		SELECT *
		FROM
		(SELECT A.* FROM
		(SELECT B.*, ROWNUM AS RNUM FROM (SELECT * FROM BOARD_FAV WHERE MEMBER_SEQ = #{member_seq} AND BOARD_FAV_CHECK = 'Y' ORDER BY BOARD_FAV_SEQ DESC)B)A
		WHERE RNUM BETWEEN #{start} AND #{end})
		JOIN BOARD USING (BOARD_SEQ)
		ORDER BY BOARD_FAV_SEQ DESC
	</select>
	
	<!-- 즐겨찾기 게시판 총 데이터 수 구하기 -->
	<select id="getTotalBoardFav" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM BOARD_FAV JOIN BOARD
		USING(BOARD_SEQ)
		WHERE BOARD_FAV.MEMBER_SEQ = #{member_seq} AND BOARD_FAV_CHECK = 'Y'
	</select>
	
	<!-- 즐겨찾기 게시판 전체 출력 -->
	<select id="boardFavList" parameterType="int" resultType="board_favDto">
		SELECT *
		FROM BOARD JOIN BOARD_FAV
		USING(BOARD_SEQ)
		WHERE BOARD_FAV.MEMBER_SEQ = #{member_seq} AND BOARD_FAV_CHECK = 'Y'
		ORDER BY BOARD_FAV.BOARD_FAV_SEQ DESC		
	</select>
	
	<!-- 즐겨찾기 게시판 업데이트 확인(하루) -->
	<select id="boardFavUpdateList" resultType="board_favDto">
		SELECT * 
		FROM BOARD JOIN BOARD_FAV
		USING(BOARD_SEQ)
		WHERE BOARD_FAV.MEMBER_SEQ = #{member_seq}
		AND BOARD_FAV.BOARD_FAV_CHECK = 'Y'
		AND TO_CHAR(BOARD_FAV.BOARD_FAV_DATE, 'yyyy-mm-dd') > (TO_CHAR(SYSDATE-2, 'yyyy-mm-dd'))
		ORDER BY BOARD_FAV.BOARD_FAV_SEQ DESC
	</select>
	
	<!-- 즐겨찾기 게시판 등록 -->
	<insert id="boardFavInsert" parameterType="board_favDto">
		INSERT INTO BOARD_FAV
		VALUES(#{member_seq}, #{board_seq}, BOARD_FAV_SEQUENCE.NEXTVAL, 'Y', SYSDATE)
	</insert>
	
	<!-- 즐겨찾기 취소 -->
	<update id="cancleBoardLike" parameterType="map">
		UPDATE BOARD_FAV
		SET
		BOARD_FAV_CHECK = 'N'
		WHERE BOARD_SEQ = #{board_seq} AND MEMBER_SEQ = #{member_seq}
	</update>
	
	<!-- 즐겨찾기 게시판 멀티 삭제 -->
	<update id="boardFavDelete" parameterType="map">
		UPDATE BOARD_FAV
		SET BOARD_FAV_CHECK = 'N'
		WHERE MEMBER_SEQ = #{member_seq} 
		AND BOARD_SEQ IN
		<foreach collection="board_seq" item="board_seq" open="(" separator=", " close=")">
			#{board_seq}
		</foreach>
	</update>

</mapper>
