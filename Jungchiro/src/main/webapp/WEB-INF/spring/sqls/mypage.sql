--게시판 즐겨찾기
DROP SEQUENCE BOARD_FAV_SEQUENCE; 
DROP TABLE BOARD_FAV;

CREATE SEQUENCE BOARD_FAV_SEQUENCE;
CREATE TABLE BOARD_FAV(
	MEMBER_SEQ NUMBER NOT NULL,									--회원번호(FK)
	BOARD_SEQ NUMBER NOT NULL,									--게시판번호(FK)
	BOARD_FAV_SEQ NUMBER NOT NULL,
	BOARD_FAV_CHECK VARCHAR2(2) DEFAULT 'Y',					--즐겨찾기 여부
	BOARD_FAV_DATE DATE NOT NULL,
	
	CONSTRAINT PK_BOARD_FAV PRIMARY KEY(MEMBER_SEQ, BOARD_SEQ),	--복합키 지정
	CONSTRAINT FK_MEMBER_SEQ_LIKE FOREIGN KEY(MEMBER_SEQ) REFERENCES MEMBER(MEMBER_SEQ),
	CONSTRAINT FK_BOARD_SEQ_LIKE FOREIGN KEY(BOARD_SEQ) REFERENCES BOARD(BOARD_SEQ) ON DELETE CASCADE
);

--전체 룰력
SELECT * FROM BOARD_FAV;

-- 즐겨찾기 게시판 전체 출력
SELECT *
FROM BOARD JOIN BOARD_FAV
USING(BOARD_SEQ)
WHERE BOARD.MEMBER_SEQ = 1 AND BOARD_FAV_CHECK = 'Y'
ORDER BY BOARD_FAV.BOARD_FAV_SEQ DESC;

-- 즐겨찾기 게시판 부분 출력
SELECT *
FROM
(SELECT A.* FROM
(SELECT B.*, ROWNUM AS RNUM FROM (SELECT * FROM BOARD_FAV WHERE BOARD_FAV_CHECK = 'Y' AND MEMBER_SEQ = 41 ORDER BY BOARD_FAV_SEQ DESC)B)A
WHERE RNUM BETWEEN 1 AND 10)
JOIN BOARD USING (BOARD_SEQ)
ORDER BY BOARD_FAV_SEQ DESC;

-- 즐겨찾기 게시판 한 회원당 즐겨찾기 수
SELECT COUNT(*)
FROM BOARD_FAV JOIN BOARD
USING(BOARD_SEQ)
WHERE BOARD_FAV.MEMBER_SEQ = 1 AND BOARD_FAV_CHECK = 'Y'	

-- 즐겨찾기 게시판 업데이트(하루) 출력
SELECT *
FROM BOARD JOIN BOARD_FAV
USING(BOARD_SEQ)
WHERE BOARD_FAV.MEMBER_SEQ = 1
AND BOARD_FAV.BOARD_FAV_CHECK = 'Y'
AND TO_CHAR(BOARD_FAV.BOARD_FAV_DATE, 'yyyy-mm-dd') > (TO_CHAR(SYSDATE-2, 'yyyy-mm-dd'))
ORDER BY BOARD_FAV.BOARD_FAV_SEQ DESC;

--pk 취소
ALTER TABLE BOARD_FAV DROP PRIMARY KEY;

--의안 즐겨찾기
DROP SEQEUNCE BILL_FAV_SEQ;
DROP TABLE BILL_FAV;

CREATE SEQUENCE BILL_FAV_SEQ;
CREATE TABLE BILL_FAV(
	MEMBER_SEQ NUMBER NOT NULL,									--회원번호
	BILL_ID VARCHAR2(40) NOT NULL,
	BILL_FAV_SEQ NUMBER NOT NULL,
	BILL_FAV_CHECK VARCHAR2(2) NOT NULL DEFAULT 'Y',			-- 즐겨찾기 여부
	BILL_FAV_DATE DATE NOT NULL,
	
	CONSTRAINT FK_MEMBER_SEQ_BILL FOREIGN KEY(MEMBER_SEQ) REFERENCES MEMBER(MEMBER_SEQ),
	CONSTRAINT FK_BILL_ID_LIKE FOREIGN KEY(BILL_ID) REFERENCES BILL(BILL_ID) ON DELETE CASCADE
);

